<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gov.pbc.xjcloud.provider.contract.mapper.auditManage.PlanManagementMapper">

    <resultMap id="PlanCheckListMapper" type="gov.pbc.xjcloud.provider.contract.entity.PlanCheckList">
        <result column="id" property="id"/>
        <result column="project_code" property="projectCode"/>
        <result column="project_name" property="projectName"/>
        <result column="project_type" property="projectType"/>
        <result column="implementing_agency_new_id" property="implementingAgencyNewId"/>
        <result column="implementing_agency_id" property="implementingAgencyId"/>
        <result column="audit_object_id" property="auditObjectId"/>
        <result column="audit_object_id_new" property="auditObjectIdNew"/>
        <result column="audit_nature_id" property="auditNatureId"/>
        <result column="audit_year" property="auditYear"/>
        <result column="status" property="status"/>
        <result column="question_entry_id" property="questionEntryId"/>
        <result column="problem_severity_id" property="problemSeverityId"/>
        <result column="rectify_situation_id" property="rectifySituationId"/>
        <result column="rectify_way" property="rectifyWay"/>
        <result column="problem_characterization" property="problemCharacterization"/>
        <result column="problem_description" property="problemDescription"/>
        <result column="may_affect" property="mayAffect"/>
        <result column="rectification_suggestions" property="rectificationSuggestions"/>
        <result column="audit_basis" property="auditBasis"/>
        <result column="audit_classification_id" property="auditClassificationId"/>
        <result column="auditing_experience" property="auditingExperience"/>
        <result column="risk_assessment_id" property="riskAssessmentId"/>
        <result column="instance_id" property="instanceId"/>
        <result column="plan_time" property="planTime"/>
        <result column="archive_time" property="archiveTime"/>
        <result column="rectify_Evaluation" property="rectifyEvaluation"/>
    </resultMap>
    <insert id="addCheckAttention">
        insert into user_attention_check (user_id,check_id) values
        <foreach collection="checkArr" item="checkId" separator=",">
            (#{userId},#{checkId})
        </foreach>
    </insert>
    <delete id="cancelCheckAttention">
        delete from user_attention_check where user_id=#{userId}
        and check_id in
        <foreach collection="checkArr" close=")" item="checkId" separator="," open="(">
            #{checkId}
        </foreach>
    </delete>
    <!--机构汇总报告start-->
    <insert id="addDeptYearReport">
        insert into dept_year_report(dept_id,audit_year,content)
         values(#{deptId},#{auditYear},#{content})
    </insert>
    <update id="updateDeptYearReport">
        UPDATE dept_year_report
        SET
         `content` = #{content}
        WHERE
            dept_id = #{deptId}
            and audit_year = #{auditYear}
    </update>
    <select id="selectDeptYearReport" resultType="java.util.Map">
        SELECT
        a.content
        FROM
        `dept_year_report` a
        where 1=1
        <if test="deptId!=null and deptId!=''">
            and a.`dept_id` = #{deptId}
        </if>
        <if test="auditYear!=null and auditYear!=''">
            and a.`audit_year` = #{auditYear}
        </if>
    </select>
    <!--机构汇总报告end-->
    <sql id="select">
        a.id,
        a.rectify_Evaluation,
        a.project_code,
        a.project_name,
        a.project_type,
        a.implementing_agency_id,
        a.audit_object_id,
        a.audit_object_id_new,
        en3.`name` audit_nature_id,
        a.audit_year,
        a.status,
        a.question_entry_id,
        a.problem_severity_id,
        a.rectify_situation_id,
        a.rectify_way,
        a.problem_characterization,
        a.problem_description,
        a.may_affect,
        a.rectification_suggestions,
        a.audit_basis,
        a.audit_classification_id,
        a.auditing_experience,
        a.plan_time,
        a.archive_time,
        a.risk_assessment_id
    </sql>

    <select id="selectPlanCheckListByAdmin" resultMap="PlanCheckListMapper">
        SELECT
        <include refid="select"/>
        FROM
        `plan_check_list` a
        LEFT JOIN entry_info en3 on a.audit_nature_id = en3.id
        where a.del_flag='0' and a.`status` != '1001'
        and a.implementing_agency_id like concat('%',concat(#{query.implementingAgencyId},'%'))
        <if test="query.projectName!=null and query.projectName!=''">
            and a.project_name like concat('%',concat(#{query.projectName},'%'))
        </if>
        <if test="query.status!=null and query.status!=''">
            and a.`status` = #{query.status, jdbcType=VARCHAR}
        </if>
        <if test="query.auditYear!=null and query.auditYear!=''">
            and a.audit_year like concat('%',concat(#{query.auditYear},'%'))
        </if>
        <if test="query.auditNatureId!=null and query.auditNatureId!=''">
            and a.audit_nature_id like concat('%',concat(#{query.auditNatureId},'%'))
        </if>
        <if test="query.projectType!=null and query.projectType!=''">
            and a.project_type like concat('%',concat(#{query.projectType},'%'))
        </if>

    </select>

    <select id="selectPlanCheckList" resultMap="PlanCheckListMapper">
        SELECT
        <include refid="select"/>
        FROM
        `plan_check_list` a
        LEFT JOIN entry_info en3 on a.audit_nature_id = en3.id
        where a.del_flag='0'
        and a.created_by like concat('%',concat(#{query.createdBy},'%'))
        <if test="query.projectName!=null and query.projectName!=''">
            and a.project_name like concat('%',concat(#{query.projectName},'%'))
        </if>
        <if test="query.status!=null and query.status!=''">
            and a.`status` = #{query.status, jdbcType=VARCHAR}
        </if>
        <if test="query.problemCharacterization!=null and query.problemCharacterization!=''">
            and a.problem_characterization like concat('%',concat(#{query.problemCharacterization},'%'))
        </if>
        <if test="query.problemDescription!=null and query.problemDescription!=''">
            and a.problem_description like concat('%',concat(#{query.problemDescription},'%'))
        </if>
        <if test="query.implementingAgencyId!=null and query.implementingAgencyId!=''">
            and a.implementing_agency_id like concat('%',concat(#{query.implementingAgencyId},'%'))
        </if>
        <if test="query.implementingAgencyNewId!=null and query.implementingAgencyNewId!=''">
            and a.implementing_agency_new_id like concat('%',concat(#{query.implementingAgencyNewId},'%'))
        </if>
        <if test="query.auditYear!=null and query.auditYear!=''">
            and a.audit_year like concat('%',concat(#{query.auditYear},'%'))
        </if>
        <if test="query.auditNatureId!=null and query.auditNatureId!=''">
            and a.audit_nature_id like concat('%',concat(#{query.auditNatureId},'%'))
        </if>
        <if test="query.projectType!=null and query.projectType!=''">
            and a.project_type like concat('%',concat(#{query.projectType},'%'))
        </if>
        <if test="query.impUserId!=null and query.impUserId!=''">
            and a.imp_user_id like concat('%',concat(#{query.impUserId},'%'))
        </if>
        <if test="query.impAdminId!=null and query.impAdminId!=''">
            and a.imp_admin_id like concat('%',concat(#{query.impAdminId},'%'))
        </if>
        <if test="query.auditUserId!=null and query.auditUserId!=''">
            and a.audit_user_id like concat('%',concat(#{query.auditUserId},'%'))
        </if>
        <if test="query.auditAdminId!=null and query.auditAdminId!=''">
            and a.audit_admin_id like concat('%',concat(#{query.auditAdminId},'%'))
        </if>

    </select>

    <select id="selectEntryByCategoryId" resultType="java.util.HashMap">
        SELECT id,`NAME` name,name1,name2,name3 FROM `entry_info` where category_fk = #{categoryId, jdbcType=VARCHAR} and del_flag = '0'
    </select>

    <select id="selectEntryById" resultType="java.util.HashMap">
        SELECT id,`NAME` name FROM `entry_info` where id = #{id, jdbcType=VARCHAR} and del_flag = '0'
    </select>
    <select id="getShortPlans" resultType="java.util.HashMap">
        SELECT a.id, a.status,b.`name` rsName FROM `plan_check_list` a
        LEFT JOIN entry_info b on a.rectify_situation_id = b.id
        where a.del_flag='0'
        <if test="status!=null and status!=''">
            and a.status =#{status}
        </if>
        <if test="auditYear!=null and auditYear!=''">
            and a.audit_year like concat('%',concat(#{auditYear},'%'))
        </if>
        <choose>
            <when test="deptChild!=null and deptChild.size()>0">
                and a.audit_object_id in
                <foreach collection="deptChild" separator="," open="(" close=")" item="auditObj">
                    #{auditObj.deptId}
                </foreach>
            </when>
            <otherwise>
                and a.audit_object_id = 0
            </otherwise>
        </choose>
    </select>
    <select id="getShortPlansNew" resultType="java.util.HashMap">
        SELECT a.id, a.status,b.`name` rsName FROM `plan_check_list` a
        LEFT JOIN entry_info b on a.rectify_situation_id = b.id
        where a.del_flag='0'
        <if test="status!=null and status!=''">
            and a.status =#{status}
        </if>
        <if test="auditYear!=null and auditYear!=''">
            and a.audit_year like concat('%',concat(#{auditYear},'%'))
        </if>
        <if test="implementingAgencyId!=null and implementingAgencyId!=''">
            and implementing_agency_id='${implementingAgencyId}'
        </if>
    </select>
    <select id="selectTypePage" resultType="gov.pbc.xjcloud.provider.contract.entity.PlanCheckList">
        SELECT
        <include refid="select"/>
        FROM
        `plan_check_list` a
        LEFT JOIN entry_info en3 on a.audit_nature_id = en3.id
        where a.del_flag='0'
        <if test="query.auditYear!=null and query.auditYear!=''">
            and a.audit_year like concat('%',concat(#{query.auditYear},'%'))
        </if>
        <if test="query.projectName!=null and query.projectName!=''">
            and a.project_name like concat('%',concat(#{query.projectName},'%'))
        </if>
        <if test="query.projectType!=null and query.projectType!=''">
            and a.project_type like concat('%',concat(#{query.projectType},'%'))
        </if>
        <if test="query.problemCharacterization!=null and query.problemCharacterization!=''">
            and a.problem_characterization like concat('%',concat(#{query.problemCharacterization},'%'))
        </if>
        <if test="query.problemDescription!=null and query.problemDescription!=''">
            and (a.problem_description like concat('%',concat(#{query.problemDescription},'%')) or
            a.problem_characterization like concat('%',concat(#{query.problemCharacterization},'%')))
        </if>
        <if test="query.deptId!=null and query.deptId.length>0">
            and a.implementing_agency_id in
            <foreach collection="query.deptId" close=")" open="(" item="dept">
                #{dept}
            </foreach>
        </if>
        <if test="query.normalStatus!=null and query.normalStatus!=''">
            and a.status = #{query.normalStatus}
        </if>
        <if test="query.auditObj!=null and query.auditObj.size()>0">
            and a.audit_object_id in
            <foreach collection="query.auditObj" separator="," open="(" close=")" item="auditObj">
                #{auditObj.deptId}
            </foreach>
        </if>
        <if test="query.deptId != null and query.deptId!=''">
            and a.implementing_agency_id in
            <foreach collection="query.deptId" separator="," open="(" close=")" item="deptId">
                #{deptId}
            </foreach>
        </if>
        <choose>
            <when test="query.type=='all'">
                and STATUS != '0'
            </when>
            <when test="query.type=='todo'">
                and STATUS != '1003' and STATUS != '0'
            </when>
            <when test="query.type=='done'">
                AND a.`status`='1003' and a.`status`!='0'
            </when>
            <when test="query.type=='delay'">
                and a.`status`='1004'
            </when>

        </choose>

    </select>
    <select id="countPlan" resultType="java.util.Map">
        select
        IFNULL(sum(case when status!= '0' then 1 else 0 end),0) planSum,
        IFNULL(sum(case when status='1003' then 1 else 0 end),0) finishCount,
        IFNULL(sum(case when STATUS != '1003' and STATUS != '0' then 1 else 0 end),0) nofinishCount,
        IFNULL(sum(case when status='1004' then 1 else 0 end),0) timeoutCount
        from
        plan_check_list where del_flag='0'
        <if test='agencyId!=null and agencyId!=""'>
            and implementing_agency_id='${agencyId}'
        </if>
        <if test='auditYear!=null and auditYear!=""'>
            and audit_year='${auditYear}'
        </if>
    </select>
    <select id="selectAttentionPage" resultType="gov.pbc.xjcloud.provider.contract.entity.PlanCheckList">
        SELECT
        a.id,
        a.project_code,
        a.project_name,
        a.implementing_agency_id,
        a.audit_object_id,
        a.audit_nature_id,
        a.audit_year,
        a.status,
        a.question_entry_id,
        a.problem_severity_id,
        rectify_situation_entry.name as rectify_situation_id,
        a.problem_characterization,
        a.problem_description,
        a.may_affect,
        a.rectification_suggestions,
        a.audit_basis,
        a.audit_classification_id,
        a.auditing_experience,
        a.risk_assessment_id
        FROM
        user_attention_check b
        left join `plan_check_list` a on a.id = b.check_id
        left join entry_info rectify_situation_entry on a.rectify_situation_id=rectify_situation_entry.id and
        rectify_situation_entry.del_flag=0 and rectify_situation_entry.category_fk=6
        where a.del_flag='0'
        <if test="query.auditYear!=null and query.auditYear!=''">
            and a.audit_year like concat('%',concat(#{query.auditYear},'%'))
        </if>
        <if test="query.projectName!=null and query.projectName!=''">
            and a.project_name like concat('%',concat(#{query.projectName},'%'))
        </if>
        <if test="query.problemCharacterization!=null and query.problemCharacterization!=''">
            and a.problem_characterization like concat('%',concat(#{query.problemCharacterization},'%'))
        </if>
        <if test="query.problemDescription!=null and query.problemDescription!=''">
            and (a.problem_description like concat('%',concat(#{query.problemDescription},'%')) or
            a.problem_characterization like concat('%',concat(#{query.problemCharacterization},'%')))
        </if>
        <if test="query.deptId!=null and query.deptId!=''">
            and a.implementing_agency_id =#{query.deptId}
        </if>
        <if test="query.normalStatus!=null and query.normalStatus!=''">
            and a.status = #{query.normalStatus}
        </if>
        <if test="query.auditObj!=null and query.auditObj!=''">
            and a.audit_object_id = #{query.auditObj}
        </if>
        <if test="query.userId!=null and query.userId!=''">
            and b.user_id = #{query.userId}
        </if>
        <if test="query.rectifySituationId!=null and query.rectifySituationId!=''">
            and a.rectify_situation_id = #{query.rectifySituationId}
        </if>
    </select>
    <select id="findDeadlinePlan" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        `plan_check_list` a
         left join plan_time_temp t on a.id = t.plan_id
        where a.del_flag='0'
         and (TIMESTAMPDIFF( DAY, t.start_time_all, IFNULL( t.end_time_all, NOW( ) ) )-ifnull(a.plan_time,0)+ifnull(a.delay_date,0))<![CDATA[>=]]>30
        and (imp_user_id=#{userId} or imp_admin_id=#{userId} or audit_user_id=#{userId}
        or audit_admin_id=#{userId})
        and status!=#{status}
    </select>
    <!--
    impParentId 实施父级机构
    impId 实施机构
    auditId 审计机构
    auditParentId 审计父级机构
    -->
    <select id="findDeadlinePlanList" parameterType="hashmap"
            resultType="gov.pbc.xjcloud.provider.contract.dto.PlanCheckListDTO">
        SELECT
            a.id planId,
            a.project_name planName,
            a.implementing_agency_new_id impParentId,
            a.implementing_agency_id impId,
            a.audit_object_id auditId,
            audit_object_id auditParentId,
            (
            TIMESTAMPDIFF( DAY, t.start_time_all, IFNULL( t.end_time_all, NOW( ) ) ) - ifnull( a.plan_time, 0 ) + ifnull( a.delay_date, 0 )
            ) days
        FROM
            `plan_check_list` a
            LEFT JOIN plan_time_temp t ON a.id = t.plan_id
        WHERE
            a.del_flag = '0'
        and status!='1013'
        and (
            TIMESTAMPDIFF( DAY, t.start_time_all, IFNULL( t.end_time_all, NOW( ) ) ) - ifnull( a.plan_time, 0 ) + ifnull( a.delay_date, 0 )
            )<![CDATA[ >=  10

        ]]>
    </select>
    <select id="getDeadlinePlanPage" resultMap="PlanCheckListMapper">
        SELECT
        <include refid="select"/>
        FROM
        `plan_check_list` a
        LEFT JOIN entry_info en3 on a.audit_nature_id = en3.id
        left join plan_time_temp t on a.id = t.plan_id
        where a.del_flag='0'
        and (TIMESTAMPDIFF( DAY, t.start_time_all, IFNULL( t.end_time_all, NOW( ) )
        )-ifnull(a.plan_time,0)+ifnull(a.delay_date,0))<![CDATA[>=]]>30
        and (imp_user_id=#{query.userId} or imp_admin_id=#{query.userId} or audit_user_id=#{query.userId}
        or audit_admin_id=#{query.userId})
        and status!=#{query.status}
    </select>
    <select id="findFilesByBizKey" resultType="gov.pbc.xjcloud.provider.contract.vo.PlanFileVO">
        select
        id,
        biz_key bizKey,
        task_id taskId,
        task_name taskName,
        file_uri fileUri,
        created_time createdTime,
        upload_user uploadUser
        from plan_files
        where biz_key=#{0} and length(file_uri)>0
    </select>
    <!--分组统计-->
    <select id="groupCount" resultType="java.util.Map">
        select
        count(1) value
        <if test="params.auditObjectId!=null and params.auditObjectId=='all'">
            ,a.audit_object_id `name`
        </if>
        <if test="params.rectifySituationId!=null and params.rectifySituationId=='all'">
            ,a.rectify_Situation_Id `name`
        </if>
        <if test="params.auditNatureId!=null and params.auditNatureId=='all'">
            ,a.audit_nature_id `name`
        </if>
        <if test="params.implementingAgencyNewId!=null and params.implementingAgencyNewId=='all'">
            ,a.implementing_agency_new_id `name`
        </if>
        <if test="params.projectType!=null and params.projectType=='all'">
            ,a.project_type `name`
        </if>
        <if test="params.problemSeverityId!=null and params.problemSeverityId=='all'">
            ,a.problem_severity_id `name`
        </if>
        from plan_check_list a
        left join plan_time_temp b on a.id=b.plan_id
        where a.del_flag = '0' and length(a.status)>1
        <if test="params.projectName!=null  and params.projectName!=''and params.projectName!='all'">
            and a.project_Name like concat('%',#{params.projectName},'%')
        </if>
        <if test="params.auditNatureId!=null  and params.auditNatureId!=''and params.auditNatureId!='all'">
            and a.audit_Nature_Id = #{params.auditNatureId}
        </if>
        <if test="params.projectType!=null  and params.projectType!=''and params.projectType!='all'">
            and a.project_Type = #{params.projectType}
        </if>
        <if test="params.problemSeverityId!=null  and params.problemSeverityId!=''and params.problemSeverityId!='all'">
            and a.problem_Severity_Id = #{params.problemSeverityId}
        </if>
        <if test="params.auditObjectId!=null  and params.auditObjectId!=''and params.auditObjectId!='all'">
            and a.audit_Object_Id = #{params.auditObjectId}
        </if>
        <if test="params.questionEntryId!=null  and params.questionEntryId!=''and params.questionEntryId!='all'">
            and a.question_Entry_Id = #{params.questionEntryId}
        </if>
        <if test="params.rectifySituationId!=null  and params.rectifySituationId!=''and params.rectifySituationId!='all'">
            and a.rectify_Situation_Id = #{params.rectifySituationId}
        </if>
        <if test="params.implementingAgencyNewId!=null  and params.implementingAgencyNewId!=''and params.implementingAgencyId!='all'">
            and a.implementing_Agency_new_Id = #{params.implementingAgencyNewId}
        </if>
        <if test="params.problemDescription!=null and params.problemDescription!='' and params.problemDescription!='all'">
            and a.problem_description like concat('%',#{params.problemDescription},'%')
        </if>
        <if test="params.questionEntryId!=null and params.questionEntryId!=''">
            and a.question_entry_id like concat('%',#{params.questionEntryId},'%')
        </if>
        <if test="params.costTimeEnd!=null and params.costTimeEnd!=''">
            and TIMESTAMPDIFF( DAY, b.start_time_all, IFNULL( b.end_time_all, NOW( ) ) )<![CDATA[<=]]>
            #{params.costTimeEnd}
        </if>
        <if test="params.costTimeStart!=null and params.costTimeStart!=''">
            and TIMESTAMPDIFF( DAY, b.start_time_all, IFNULL( b.end_time_all, NOW( ) ) )<![CDATA[>]]>
            #{params.costTimeStart}
        </if>
        <if test="params.auditYearStart!=null and params.auditYearStart!=''">
            and a.audit_year<![CDATA[>=]]>#{params.auditYearStart}
        </if>
        <if test="params.auditYearEnd!=null and params.auditYearEnd!=''">
            and a.audit_year<![CDATA[<=]]>#{params.auditYearEnd}
        </if>
        <if test="params.overTimeEnd!=null and params.overTimeEnd!=''">
            and (TIMESTAMPDIFF( DAY, b.start_time_all, IFNULL( b.end_time_all, NOW( ) )
            )-ifnull(a.plan_time,0)+ifnull(a.delay_date,0))<![CDATA[<=]]>#{params.overTimeEnd}
        </if>
        <if test="params.overTimeStart!=null and params.overTimeStart!=''">
            and (TIMESTAMPDIFF( DAY, b.start_time_all, IFNULL( b.end_time_all, NOW( ) )
            )-ifnull(a.plan_time,0)+ifnull(a.delay_date,0))<![CDATA[>]]>#{params.overTimeStart}
        </if>
        <if test="params.overTime!=null and params.overTime!='' and params.overTime!='all'">
            and a.problem_description like concat('%',#{params.problemDescription},'%')
        </if>
        <if test="params.groupBy!=null and params.groupBy!=''">
            group by ${params.groupBy}
        </if>
    </select>
    <select id="listAllWithDays" resultType="java.util.Map">
        select
        a.id,
        ifnull(a.plan_time,0) planTime,
        b.start_time_all startTimeAll,
        b.end_time_all endTimeAll,
        ifnull(a.delay_date,0) delayDate
        from plan_check_list a
        left join plan_time_temp b on a.id=b.plan_id
        where a.del_flag = '0' and b.start_time_all is not null and a.status!='0'
        <if test="params.projectName!=null  and params.projectName!=''and params.projectName!='all'">
            and a.project_Name like concat('%',#{params.projectName},'%')
        </if>
        <if test="params.problemDescription!=null and params.problemDescription!='' and params.problemDescription!='all'">
            and a.problem_description like concat('%',#{params.problemDescription},'%')
        </if>
        GROUP BY a.id
    </select>
    <select id="selectEntryByQuery" resultType="java.util.Map">
        select pcl.audit_year,
        pcl.implementing_agency_id implementingAgencyId,
        pcl.implementing_agency_id,
        pcl.implementing_agency_new_id implementingAgencyNewId,
        pcl.implementing_agency_new_id,
        pcl.audit_object_id auditObjectId,
        pcl.audit_object_id ,
        pcl.audit_nature_id ,
        pcl.risk_assessment_id ,
        pcl.evaluation ,
        pcl.id,
        pcl.project_code,
        pcl.project_name,
        project_type_entry.name
        project_type,
        pcl.question_entry_id questionEntryId,
        pcl.question_entry_id,
        pcl.problem_severity_id problemSeverityId,
        pcl.problem_severity_id ,
        (case pcl.status
        when '1001' then '正在实施'
        when '1002' then '实施结束'
        when '1003' then '已归档'
        when '1004' then '延期整改'
        else '正在立项' end
        ) status,
        pcl.rectify_evaluation,
        pcl.rectify_result,
        (select datediff(start_time_all,now())-pcl.plan_time from plan_time_temp where pcl.id=plan_time_temp.plan_id)
        over_days,
        pcl.audit_basis auditBasis,
        pcl.audit_basis,
        pcl.auditing_experience,
        pcl.audit_classification_id auditClassificationId,
        pcl.audit_classification_id ,
        pcl.auditing_experience auditingExperience,audit_nature_entry.name
        audit_nature_name,
        problem_severity_entry.name problem_severity_name,
        rectify_situation_entry.name rectify_situation_name,
        risk_assessment_entry.name risk_assessment_name,
        pcl.problem_characterization,
        pcl.enter_time,
        (select DATE_FORMAT(start_time_all,'%Y-%m-%d') from plan_time_temp where plan_time_temp.plan_id=pcl.id )
        start_time_all,
        (select days from plan_time_temp where plan_time_temp.plan_id=pcl.id ) days,
        pcl.frequency frequency,
        pcl.problem_description
        from plan_check_list pcl
        left join entry_info project_type_entry on pcl.project_type=project_type_entry.id and
        project_type_entry.del_flag=0 and project_type_entry.category_fk=3
        left join entry_info audit_nature_entry on pcl.audit_nature_id=audit_nature_entry.id and
        audit_nature_entry.del_flag=0 and audit_nature_entry.category_fk=4
        left join entry_info problem_severity_entry on pcl.problem_severity_id=problem_severity_entry.id and
        problem_severity_entry.del_flag=0 and problem_severity_entry.category_fk=5
        left join entry_info rectify_situation_entry on pcl.rectify_situation_id=rectify_situation_entry.id and
        rectify_situation_entry.del_flag=0 and rectify_situation_entry.category_fk=6
        left join entry_info risk_assessment_entry on pcl.risk_assessment_id=risk_assessment_entry.id and
        risk_assessment_entry.del_flag=0 and risk_assessment_entry.category_fk=9
        left join plan_time_temp pit on pcl.id=pit.plan_id
        where pcl.del_flag=0
        <if test='query.projectName!=null and query.projectName!=""'>and pcl.project_name like
            '%${query.projectName}%'
        </if>
        <if test='query.problemDescription!=null and query.problemDescription!=""'>
            and (pcl.problem_characterization like '%${query.problemDescription}%' or pcl.problem_description like
            '%${query.problemDescription}%')
        </if>
        <if test='query.auditYearStart!=null and query.auditYearStart!=""'>
            and (pcl.audit_year <![CDATA[>=]]>  #{query.auditYearStart})
        </if>
        <if test='query.auditYearEnd!=null and query.auditYearEnd!=""'>
            and (pcl.audit_year <![CDATA[<=]]>  #{query.auditYearEnd})
        </if>
        <if test="query.costTimeEnd!=null and query.costTimeEnd!=''">
            and TIMESTAMPDIFF( DAY, pit.start_time_all, IFNULL( pit.end_time_all, NOW( ) ) )<![CDATA[<=]]>
            #{query.costTimeEnd}
        </if>
        <if test="query.costTimeStart!=null and query.costTimeStart!=''">
            and TIMESTAMPDIFF( DAY, pit.start_time_all, IFNULL( pit.end_time_all, NOW( ) ) )<![CDATA[>]]>
            #{query.costTimeStart}
        </if>

        <if test="query.overTimeEnd!=null and query.overTimeEnd!=''">
            and (TIMESTAMPDIFF( DAY, pit.start_time_all, IFNULL( pit.end_time_all, NOW( ) )
            )-ifnull(pcl.plan_time,0)+ifnull(pcl.delay_date,0))<![CDATA[<=]]>#{query.overTimeEnd}
        </if>
        <if test="query.overTimeStart!=null and query.overTimeStart!=''">
            and (TIMESTAMPDIFF( DAY, pit.start_time_all, IFNULL( pit.end_time_all, NOW( ) )
            )-ifnull(pcl.plan_time,0)+ifnull(pcl.delay_date,0))<![CDATA[>]]>#{query.costTimeStart}
        </if>
        <if test='query.implementingAgencyId!=null and query.implementingAgencyId!=""'>
            and (pcl.implementing_agency_id in ('${query.implementingAgencyId}'))
        </if>
        <if test='query.implementingAgencyNewId!=null and query.implementingAgencyNewId!=""'>
            and (pcl.implementing_agency_new_id in ('${query.implementingAgencyNewId}'))
        </if>
        <if test='query.auditNatureId!=null and query.auditNatureId!=""'>
            and (pcl.audit_nature_id =#{query.auditNatureId})
        </if>
        <if test='query.auditObjectId !=null and query.auditObjectId !="" '>
            and (pcl.audit_object_id = #{query.auditObjectId})
        </if>
        <if test='query.projectType !=null and query.projectType !="" '>
            and (pcl.project_Type = #{query.projectType})
        </if>
        <if test='query.problemSeverityId !=null and query.problemSeverityId !="" '>
            and (pcl.problem_severity_id = #{query.problemSeverityId} )
        </if>
        <if test="query.rectifySituationId !=null and query.rectifySituationId!=''">
            and (pcl.rectify_situation_id = #{query.rectifySituationId,jdbcType=VARCHAR})
        </if>
        <if test='query.questionEntryId!=null and query.questionEntryId!=""'>
            and (pcl.question_entry_id like concat('%',#{query.questionEntryId},'%'))
        </if>
        and pcl.status!='0' and pcl.status is not null
        <if test="pageStart!=null">
            limit ${pageStart}
        </if>
        <if test="pageNo!=null">
            ,${pageNo}
        </if>

    </select>
    <select id="selectEntryByKeyAndLevel" resultType="java.util.Map" parameterType="map">
        select
        id,
        ifnull(t.name,'') name
        from ( select
        id
        ,
        <if test="level==1">
            name
        </if>
        <if test="level==2">
            name1
        </if>
        <if test="level==3">
            name2
        </if>
        <if test="level==4">
            name3
        </if>
        as "name"
        from entry_info
        where category_fk in (select id from entry_category where def_key=#{defKey})
        <if test=" name!=null and name!='' ">
            and name =#{name}
        </if>
        <if test="name1!=null and name1!=''">
            and name1 =#{name1}
        </if>
        <if test="name2!=null and name2!=''">
            and name2 =#{name2}
        </if>
        <if test="name3!=null and name3!=''">
            and name3 =#{name3}
        </if>) t group by name
    </select>
    <select id="findCheckListTip" resultType="gov.pbc.xjcloud.provider.contract.entity.PlanOverTimeTip">
        select id,tip_Assignee tipAssignee
         from  plan_overtime_tip where plan_id=#{planId} and over_type=#{overType}
    </select>

    <insert id="saveReturnPK" parameterType="gov.pbc.xjcloud.provider.contract.entity.PlanCheckList"
            useGeneratedKeys="true" keyProperty="planCheckList.id" keyColumn="id">
        INSERT INTO `plan_check_list`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            `id`,
            `created_by`,
            `project_code`,
            `project_name`,
            `project_type`,
            `implementing_agency_id`,
            `implementing_agency_new_id`,
            `audit_object_id`,
            `audit_nature_id`,
            `audit_year`,
            `question_entry_id`,
            `problem_severity_id`,
            `rectify_situation_id`,
            `problem_characterization`,
            `problem_description`,
            `may_affect`,
            `rectification_suggestions`,
            `audit_basis`,
            `audit_classification_id`,
            `auditing_experience`,
            `risk_assessment_id`,
            `imp_user_id`,
            `imp_admin_id`,
            `audit_user_id`,
            `audit_admin_id`,
            `status`
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{planCheckList.id},
            <if test="planCheckList.createdBy != null">
                #{planCheckList.createdBy},
            </if>
            <if test="planCheckList.projectCode != null">
                #{planCheckList.projectCode},
            </if>
            <if test="planCheckList.projectName != null">
                #{planCheckList.projectName},
            </if>
            <if test="planCheckList.projectType != null">
                #{planCheckList.projectType},
            </if>
            <if test="planCheckList.implementingAgencyId != null">
                #{planCheckList.implementingAgencyId},
            </if>
            <if test="planCheckList.implementingAgencyNewId != null">
                #{planCheckList.implementingAgencyNewId},
            </if>
            <if test="planCheckList.auditObjectId != null">
                #{planCheckList.auditObjectId},
            </if>
            <if test="planCheckList.auditNatureId != null">
                #{planCheckList.auditNatureId},
            </if>
            <if test="planCheckList.auditYear != null">
                #{planCheckList.auditYear},
            </if>
            <if test="planCheckList.questionEntryId != null">
                #{planCheckList.questionEntryId},
            </if>
            <if test="planCheckList.problemSeverityId != null">
                #{planCheckList.problemSeverityId},
            </if>
            <if test="planCheckList.rectifySituationId != null">
                #{planCheckList.rectifySituationId},
            </if>
            <if test="planCheckList.problemCharacterization != null">
                #{planCheckList.problemCharacterization},
            </if>
            <if test="planCheckList.problemDescription != null">
                #{planCheckList.problemDescription},
            </if>
            <if test="planCheckList.mayAffect != null">
                #{planCheckList.mayAffect},
            </if>
            <if test="planCheckList.rectificationSuggestions != null">
                #{planCheckList.rectificationSuggestions},
            </if>
            <if test="planCheckList.auditBasis != null">
                #{planCheckList.auditBasis},
            </if>
            <if test="planCheckList.auditClassificationId != null">
                #{planCheckList.auditClassificationId},
            </if>
            <if test="planCheckList.auditingExperience != null">
                #{planCheckList.auditingExperience},
            </if>
            <if test="planCheckList.riskAssessmentId != null">
                #{planCheckList.riskAssessmentId},
            </if>
            <if test="planCheckList.impUserId != null">
                #{planCheckList.impUserId},
            </if>
            <if test="planCheckList.impAdminId != null">
                #{planCheckList.impAdminId},
            </if>
            <if test="planCheckList.auditUserId != null">
                #{planCheckList.auditUserId},
            </if>
            <if test="planCheckList.auditAdminId != null">
                #{planCheckList.auditAdminId},
            </if>
            <if test="planCheckList.status != null">
                #{planCheckList.status}
            </if>
        </trim>
    </insert>
    <insert id="addFileLog">
        insert into plan_files(id,upload_user,file_uri,created_time,biz_key,task_id,task_name)
         values(#{id},#{uploadUser},#{fileUri},#{createdTime},#{bizKey},#{taskId},#{taskName})
    </insert>
    <insert id="insertTip" parameterType="gov.pbc.xjcloud.provider.contract.entity.PlanOverTimeTip">
        <selectKey>
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into plan_overtime_tip(over_type,tip_assignee,del_flag,plan_id)
        values(#{overType},#{tipAssignee},#{delFlag},#{planId})
    </insert>
</mapper>